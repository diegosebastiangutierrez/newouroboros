<?php

/**
 * @file
 * Contains theme override functions and preprocess functions
 */

use Drupal\Core\Form\FormStateInterface;
/**
 * Implements hook_page_attachements_alter().
 * This will overwrite the default meta character type tag with HTML5 version.
 */
function newouroboros_page_attachments_alter(array &$page) {
  $page['#attached']['html_head'][] = [
    [
      '#tag' => 'meta',
      '#attributes' => [
        'charset' => 'utf-8',
      ],
    ],
    'system_meta_content_type',
  ];
  $page['#attached']['html_head'][] = [
    [
      '#tag' => 'meta',
      '#attributes' => [
        'name' =>  'MobileOptimized',
        'content' =>  'width'
      ],
    ],
  ];
  $page['#attached']['html_head'][] = [
    [
      '#tag' => 'meta',
      '#attributes' => [
        'name' =>  'HandheldFriendly',
        'content' =>  'true'
      ],
    ],
  ];

 $unset_meta = array('hreflang', 'system_meta_generator', 'system/base', 'facebook_comments/fluid');

  foreach ($page['#attached']['library'] as $key => $value) {
    if (in_array($value, $unset_meta)) unset($page['#attached']['library'][$key]);
  }

  foreach ($page['#attached']['html_head'] as $key => $value) {

    if (in_array($value[1], $unset_meta)) unset($page['#attached']['html_head'][$key]);
  }

}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function newouroboros_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {

  $term = $variables['elements']['#taxonomy_term'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'taxonomy_term__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->id() . '__' . $sanitized_view_mode;
}
function newouroboros_theme_suggestions_user_alter(&$suggestions, $vars, $hook) {

  // Define the view mode.
  $mode = $vars['elements']['#view_mode'];
  // Create a theme hook suggestion which has the view mode name in it.
  $suggestions[] = 'user__' . $mode;
}

function newouroboros_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Add content type suggestions.
  if ($node = \Drupal::request()->attributes->get('node')) {
    array_splice($suggestions, 1, 0, 'page__node__' . $node->getType());
  }

  $status = \Drupal::requestStack()->getCurrentRequest()->attributes->get('exception');
  if ($status && $status->getStatusCode() == 404){
    $suggestions[] = 'page__404';
  }

  if ($status && $status->getStatusCode() == 403){
    $suggestions[] = 'page__403';
  }

}

/**
 * Implements hook_theme_suggestions_container_alter().
 */
function newouroboros_theme_suggestions_container_alter(&$suggestions, array $variables) {
  $element = $variables['element'];

  if (isset($element['#type']) && $element['#type'] == 'view') {
    $suggestions[] = 'container__' . $element['#name'];
    $suggestions[] = 'container__' . $element['#name'] . '__' . $element['#display_id'];
  }

  if (isset($element['#type']) && $element['#type'] == 'container' && isset($element['children']['#type'])) {
    $suggestions[] = 'container__' . $element['children']['#type'];
  }
}

function newouroboros_preprocess_field(&$vars) {
  /* Set shortcut variables. Hooray for less typing! */
  $name = $vars['element']['#field_name'];
  $bundle = $vars['element']['#bundle'];
  $mode = $vars['element']['#view_mode'];

  if($mode == 'full' && $bundle == 'preventa'){
    $fields = array("field_sales_url", "field_pickup_address", "field_creators");
  }


  if($bundle == 'article'){

    $fields = array("field_characters", "field_creative_house", "field_event", "field_imprint", "field_title", "field_creators", "field_binding", "field_genre", "field_country", "field_movies", "field_series", "field_episodes", "field_seasons","field_directors", "field_actors", "field_tags");

  }

  if($mode == 'full' && $bundle == 'comicbook_store'){

    $fields = array("field_address", "field_location");

    if(in_array($name, $fields)){

      $vars['attributes']['class'][] = 'addresses';

    }

  }

  if($mode == 'full' && $bundle == 'preventa'){

    $fields = array("field_creators", "field_creative_house", "field_sales_url");

  }

}

/**
 * Implements template_preprocess_input().
 */
function newouroboros_preprocess_input(&$variables) {
  // Set a placeholder for all search form elements.

  if (in_array($variables['attributes']['type'], array('search','text', 'password'))) {
    $variables['attributes']['placeholder'] = $variables['element']['#title'];
  }

  if(in_array($variables['attributes']['type'], array('radio','checkbox'))){
    $variables['attributes']['class'][] = 'form-check-input';
  }

  if(in_array($variables['attributes']['type'], array('email'))){
   $variables['attributes']['placeholder'] = t('Email address');
  }
}

function newouroboros_preprocess_form_element_label(&$variables) {
  $element = $variables['element'];
  $variables['attributes']['class'][] = 'form-check-label';
}

function newouroboros_preprocess_form_element(&$variables) {
  $element = $variables['element'];
  $type = $variables['type'];

  if(in_array($type, array('radio','checkbox'))){
    $variables['attributes']['class'][] = 'form-check';
    $variables['label']['#attributes']['class'][] = 'form-check-label';
  }
}
